Non-terminaux inutiles dans la grammaire

    rectangle
    triangle
    cercle
    ellipse
    ligne
    chemin
    texte
    numberComparator
    numberCondition
    vectPos


Terminaux inutilisés dans la grammaire

    END
    FLOAT
    BOOL
    INT_TYPE
    BOOL_TYPE
    FLOAT_TYPE
    ATTRIBUT
    SINON
    REPETE
    FOIS
    EQUAL
    NOTEQUAL
    LESS
    LESSEQUAL
    GREATER
    GREATEREQUAL
    RECTANGLE
    TRIANGLE
    CERCLE
    ELLIPSE
    LIGNE
    CHEMIN
    TEXTE
    STOP


Règles inutiles dans la grammaire

   56 rectangle: RECTANGLE operation operation operation operation operation operation operation operation attributs

   57 triangle: TRIANGLE operation operation operation operation attributs

   58 cercle: CERCLE operation operation operation attributs

   59 ellipse: ELLIPSE operation operation operation operation attributs

   60 ligne: LIGNE operation operation operation operation attributs

   61 chemin: CHEMIN vectPos attributs

   62 texte: TEXTE operation operation STRING STRING attributs

   63 numberComparator: EQUAL
   64                 | NOTEQUAL
   65                 | LESSEQUAL
   66                 | GREATEREQUAL
   67                 | LESS
   68                 | GREATER

   69 numberCondition: operation numberComparator operation

   70 vectPos: operation operation
   71        | vectPos operation operation


État 62 conflits: 4 réduction/réduction


Grammaire

    0 $accept: programme $end

    1 programme: subProgramme
    2          | SVG

    3 subProgramme: instruction NL subProgramme
    4             | NL

    5 instructions: instruction NL instructions
    6             | %empty

    7 instruction: expression

    8 attributsInline: attributAffectation
    9                | attributsInline '&' attributAffectation

   10 attributsCSS: attributAffectation
   11             | attributsCSS NL attributAffectation

   12 attributs: ';'
   13          | '{' NL attributsCSS NL '}'
   14          | INLINE_AFFECTATION attributsInline ';'

   15 attributAffectation: COULEUR ':' HEXA_VALUE
   16                    | ROTATION ':' operation
   17                    | OPACITE ':' pourcentage
   18                    | REMPLISSAGE ':' HEXA_VALUE
   19                    | EPAISSEUR ':' operation

   20 expression: declarationCanva
   21           | declarationFigure
   22           | accesFigure
   23           | modificationFigure
   24           | declarationVariable
   25           | if

   26 declarationCanva: TAILLE NUMBER NUMBER

   27 declarationFigure: carre

   28 carre: CARRE operation operation operation attributs

   29 accesFigure: CARRE '[' NUMBER ']'
   30            | VARIABLE

   31 setAttribut: COULEUR '=' HEXA_VALUE
   32            | ROTATION '=' operation
   33            | OPACITE '=' pourcentage
   34            | REMPLISSAGE '=' HEXA_VALUE
   35            | EPAISSEUR '=' operation

   36 modificationFigure: accesFigure '.' setAttribut

   37 declarationVariable: VARIABLE affectation declarationFigure

   38 stringComparator: STRINGEQUAL
   39                 | STRINGNOTEQUAL

   40 condition: stringCondition

   41 pourcentage: operation '%'

   42 chaine: HEXA_VALUE
   43       | STRING
   44       | pourcentage

   45 accesCouleurFigure: accesFigure '.' COULEUR

   46 stringCondition: accesCouleurFigure stringComparator chaine

   47 if: SI '(' condition ')' ALORS '{' NL instructions '}'

   48 affectation: '='

   49 operation: NUMBER
   50          | '(' operation ')'
   51          | operation '+' operation
   52          | operation '-' operation
   53          | operation '*' operation
   54          | operation '/' operation
   55          | '-' operation


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    '%' (37) 41
    '&' (38) 9
    '(' (40) 47 50
    ')' (41) 47 50
    '*' (42) 53
    '+' (43) 51
    '-' (45) 52 55
    '.' (46) 36 45
    '/' (47) 54
    ':' (58) 15 16 17 18 19
    ';' (59) 12 14
    '=' (61) 31 32 33 34 35 48
    '[' (91) 29
    ']' (93) 29
    '{' (123) 13 47
    '}' (125) 13 47
    error (256)
    NL (258) 3 4 5 11 13 47
    END (259)
    NUMBER <int> (260) 26 29 49
    FLOAT <float> (261)
    BOOL <bool> (262)
    INT_TYPE <std::string> (263)
    BOOL_TYPE <std::string> (264)
    FLOAT_TYPE <std::string> (265)
    VARIABLE <std::string> (266) 30 37
    STRING <std::string> (267) 43
    ATTRIBUT (268)
    INLINE_AFFECTATION (269) 14
    HEXA_VALUE <std::string> (270) 15 18 31 34 42
    COULEUR <std::string> (271) 15 31 45
    ROTATION <std::string> (272) 16 32
    REMPLISSAGE <std::string> (273) 18 34
    OPACITE <std::string> (274) 17 33
    EPAISSEUR <std::string> (275) 19 35
    SI (276) 47
    ALORS (277) 47
    SINON (278)
    REPETE (279)
    FOIS (280)
    EQUAL (281)
    NOTEQUAL (282)
    LESS (283)
    LESSEQUAL (284)
    GREATER (285)
    GREATEREQUAL (286)
    STRINGEQUAL (287) 38
    STRINGNOTEQUAL (288) 39
    TAILLE (289) 26
    RECTANGLE (290)
    CARRE (291) 28 29
    TRIANGLE (292)
    CERCLE (293)
    ELLIPSE (294)
    LIGNE (295)
    CHEMIN (296)
    TEXTE (297)
    STOP (298)
    SVG (299) 2
    NEG (300)


Non-terminaux, suivis des règles où ils apparaissent

    $accept (62)
        à gauche: 0
    programme <ArbreSyntaxique> (63)
        à gauche: 1 2
        à droite: 0
    subProgramme <ArbreSyntaxique> (64)
        à gauche: 3 4
        à droite: 1 3
    instructions <std::vector<Noeud *>> (65)
        à gauche: 5 6
        à droite: 5 47
    instruction <Noeud *> (66)
        à gauche: 7
        à droite: 3 5
    attributsInline <std::map<std::string, std::string>> (67)
        à gauche: 8 9
        à droite: 9 14
    attributsCSS <std::map<std::string, std::string>> (68)
        à gauche: 10 11
        à droite: 11 13
    attributs <std::map<std::string, std::string>> (69)
        à gauche: 12 13 14
        à droite: 28
    attributAffectation <std::pair<std::string, std::string>> (70)
        à gauche: 15 16 17 18 19
        à droite: 8 9 10 11
    expression <Noeud *> (71)
        à gauche: 20 21 22 23 24 25
        à droite: 7
    declarationCanva <CanevaNode *> (72)
        à gauche: 26
        à droite: 20
    declarationFigure <FigureNode *> (73)
        à gauche: 27
        à droite: 21 37
    carre <CarreNode *> (74)
        à gauche: 28
        à droite: 27
    accesFigure <AccesFigureNode *> (75)
        à gauche: 29 30
        à droite: 22 36 45
    setAttribut <std::pair<std::string, std::string>> (76)
        à gauche: 31 32 33 34 35
        à droite: 36
    modificationFigure <ModificationNode *> (77)
        à gauche: 36
        à droite: 23
    declarationVariable <DeclarationVariable *> (78)
        à gauche: 37
        à droite: 24
    stringComparator <string_operators> (79)
        à gauche: 38 39
        à droite: 46
    condition <ConditionNode *> (80)
        à gauche: 40
        à droite: 47
    pourcentage <std::string> (81)
        à gauche: 41
        à droite: 17 33 44
    chaine <std::string> (82)
        à gauche: 42 43 44
        à droite: 46
    accesCouleurFigure <AccesCouleurFigure *> (83)
        à gauche: 45
        à droite: 46
    stringCondition <CouleurConditionNode *> (84)
        à gauche: 46
        à droite: 40
    if <IfNode *> (85)
        à gauche: 47
        à droite: 25
    affectation (86)
        à gauche: 48
        à droite: 37
    operation <int> (87)
        à gauche: 49 50 51 52 53 54 55
        à droite: 16 19 28 32 35 41 50 51 52 53 54 55


État 0

    0 $accept: • programme $end

    NL        décalage et aller à l'état 1
    VARIABLE  décalage et aller à l'état 2
    SI        décalage et aller à l'état 3
    TAILLE    décalage et aller à l'état 4
    CARRE     décalage et aller à l'état 5
    SVG       décalage et aller à l'état 6

    programme            aller à l'état 7
    subProgramme         aller à l'état 8
    instruction          aller à l'état 9
    expression           aller à l'état 10
    declarationCanva     aller à l'état 11
    declarationFigure    aller à l'état 12
    carre                aller à l'état 13
    accesFigure          aller à l'état 14
    modificationFigure   aller à l'état 15
    declarationVariable  aller à l'état 16
    if                   aller à l'état 17


État 1

    4 subProgramme: NL •

    $défaut  réduction par utilisation de la règle 4 (subProgramme)


État 2

   30 accesFigure: VARIABLE •
   37 declarationVariable: VARIABLE • affectation declarationFigure

    '='  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 30 (accesFigure)

    affectation  aller à l'état 19


État 3

   47 if: SI • '(' condition ')' ALORS '{' NL instructions '}'

    '('  décalage et aller à l'état 20


État 4

   26 declarationCanva: TAILLE • NUMBER NUMBER

    NUMBER  décalage et aller à l'état 21


État 5

   28 carre: CARRE • operation operation operation attributs
   29 accesFigure: CARRE • '[' NUMBER ']'

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '['     décalage et aller à l'état 24
    '('     décalage et aller à l'état 25

    operation  aller à l'état 26


État 6

    2 programme: SVG •

    $défaut  réduction par utilisation de la règle 2 (programme)


État 7

    0 $accept: programme • $end

    $end  décalage et aller à l'état 27


État 8

    1 programme: subProgramme •

    $défaut  réduction par utilisation de la règle 1 (programme)


État 9

    3 subProgramme: instruction • NL subProgramme

    NL  décalage et aller à l'état 28


État 10

    7 instruction: expression •

    $défaut  réduction par utilisation de la règle 7 (instruction)


État 11

   20 expression: declarationCanva •

    $défaut  réduction par utilisation de la règle 20 (expression)


État 12

   21 expression: declarationFigure •

    $défaut  réduction par utilisation de la règle 21 (expression)


État 13

   27 declarationFigure: carre •

    $défaut  réduction par utilisation de la règle 27 (declarationFigure)


État 14

   22 expression: accesFigure •
   36 modificationFigure: accesFigure • '.' setAttribut

    '.'  décalage et aller à l'état 29

    $défaut  réduction par utilisation de la règle 22 (expression)


État 15

   23 expression: modificationFigure •

    $défaut  réduction par utilisation de la règle 23 (expression)


État 16

   24 expression: declarationVariable •

    $défaut  réduction par utilisation de la règle 24 (expression)


État 17

   25 expression: if •

    $défaut  réduction par utilisation de la règle 25 (expression)


État 18

   48 affectation: '=' •

    $défaut  réduction par utilisation de la règle 48 (affectation)


État 19

   37 declarationVariable: VARIABLE affectation • declarationFigure

    CARRE  décalage et aller à l'état 30

    declarationFigure  aller à l'état 31
    carre              aller à l'état 13


État 20

   47 if: SI '(' • condition ')' ALORS '{' NL instructions '}'

    VARIABLE  décalage et aller à l'état 32
    CARRE     décalage et aller à l'état 33

    accesFigure         aller à l'état 34
    condition           aller à l'état 35
    accesCouleurFigure  aller à l'état 36
    stringCondition     aller à l'état 37


État 21

   26 declarationCanva: TAILLE NUMBER • NUMBER

    NUMBER  décalage et aller à l'état 38


État 22

   49 operation: NUMBER •

    $défaut  réduction par utilisation de la règle 49 (operation)


État 23

   55 operation: '-' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 39


État 24

   29 accesFigure: CARRE '[' • NUMBER ']'

    NUMBER  décalage et aller à l'état 40


État 25

   50 operation: '(' • operation ')'

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 41


État 26

   28 carre: CARRE operation • operation operation attributs
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 42
    '+'     décalage et aller à l'état 43
    '*'     décalage et aller à l'état 44
    '/'     décalage et aller à l'état 45
    '('     décalage et aller à l'état 25

    operation  aller à l'état 46


État 27

    0 $accept: programme $end •

    $défaut  accepter


État 28

    3 subProgramme: instruction NL • subProgramme

    NL        décalage et aller à l'état 1
    VARIABLE  décalage et aller à l'état 2
    SI        décalage et aller à l'état 3
    TAILLE    décalage et aller à l'état 4
    CARRE     décalage et aller à l'état 5

    subProgramme         aller à l'état 47
    instruction          aller à l'état 9
    expression           aller à l'état 10
    declarationCanva     aller à l'état 11
    declarationFigure    aller à l'état 12
    carre                aller à l'état 13
    accesFigure          aller à l'état 14
    modificationFigure   aller à l'état 15
    declarationVariable  aller à l'état 16
    if                   aller à l'état 17


État 29

   36 modificationFigure: accesFigure '.' • setAttribut

    COULEUR      décalage et aller à l'état 48
    ROTATION     décalage et aller à l'état 49
    REMPLISSAGE  décalage et aller à l'état 50
    OPACITE      décalage et aller à l'état 51
    EPAISSEUR    décalage et aller à l'état 52

    setAttribut  aller à l'état 53


État 30

   28 carre: CARRE • operation operation operation attributs

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 26


État 31

   37 declarationVariable: VARIABLE affectation declarationFigure •

    $défaut  réduction par utilisation de la règle 37 (declarationVariable)


État 32

   30 accesFigure: VARIABLE •

    $défaut  réduction par utilisation de la règle 30 (accesFigure)


État 33

   29 accesFigure: CARRE • '[' NUMBER ']'

    '['  décalage et aller à l'état 24


État 34

   45 accesCouleurFigure: accesFigure • '.' COULEUR

    '.'  décalage et aller à l'état 54


État 35

   47 if: SI '(' condition • ')' ALORS '{' NL instructions '}'

    ')'  décalage et aller à l'état 55


État 36

   46 stringCondition: accesCouleurFigure • stringComparator chaine

    STRINGEQUAL     décalage et aller à l'état 56
    STRINGNOTEQUAL  décalage et aller à l'état 57

    stringComparator  aller à l'état 58


État 37

   40 condition: stringCondition •

    $défaut  réduction par utilisation de la règle 40 (condition)


État 38

   26 declarationCanva: TAILLE NUMBER NUMBER •

    $défaut  réduction par utilisation de la règle 26 (declarationCanva)


État 39

   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation
   55          | '-' operation •

    $défaut  réduction par utilisation de la règle 55 (operation)


État 40

   29 accesFigure: CARRE '[' NUMBER • ']'

    ']'  décalage et aller à l'état 60


État 41

   50 operation: '(' operation • ')'
   51          | operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45
    ')'  décalage et aller à l'état 61


État 42

   52 operation: operation '-' • operation
   55          | '-' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 62


État 43

   51 operation: operation '+' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 63


État 44

   53 operation: operation '*' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 64


État 45

   54 operation: operation '/' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 65


État 46

   28 carre: CARRE operation operation • operation attributs
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 42
    '+'     décalage et aller à l'état 43
    '*'     décalage et aller à l'état 44
    '/'     décalage et aller à l'état 45
    '('     décalage et aller à l'état 25

    operation  aller à l'état 66


État 47

    3 subProgramme: instruction NL subProgramme •

    $défaut  réduction par utilisation de la règle 3 (subProgramme)


État 48

   31 setAttribut: COULEUR • '=' HEXA_VALUE

    '='  décalage et aller à l'état 67


État 49

   32 setAttribut: ROTATION • '=' operation

    '='  décalage et aller à l'état 68


État 50

   34 setAttribut: REMPLISSAGE • '=' HEXA_VALUE

    '='  décalage et aller à l'état 69


État 51

   33 setAttribut: OPACITE • '=' pourcentage

    '='  décalage et aller à l'état 70


État 52

   35 setAttribut: EPAISSEUR • '=' operation

    '='  décalage et aller à l'état 71


État 53

   36 modificationFigure: accesFigure '.' setAttribut •

    $défaut  réduction par utilisation de la règle 36 (modificationFigure)


État 54

   45 accesCouleurFigure: accesFigure '.' • COULEUR

    COULEUR  décalage et aller à l'état 72


État 55

   47 if: SI '(' condition ')' • ALORS '{' NL instructions '}'

    ALORS  décalage et aller à l'état 73


État 56

   38 stringComparator: STRINGEQUAL •

    $défaut  réduction par utilisation de la règle 38 (stringComparator)


État 57

   39 stringComparator: STRINGNOTEQUAL •

    $défaut  réduction par utilisation de la règle 39 (stringComparator)


État 58

   46 stringCondition: accesCouleurFigure stringComparator • chaine

    NUMBER      décalage et aller à l'état 22
    STRING      décalage et aller à l'état 74
    HEXA_VALUE  décalage et aller à l'état 75
    '-'         décalage et aller à l'état 23
    '('         décalage et aller à l'état 25

    pourcentage  aller à l'état 76
    chaine       aller à l'état 77
    operation    aller à l'état 78


État 59

   52 operation: operation '-' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 79


État 60

   29 accesFigure: CARRE '[' NUMBER ']' •

    $défaut  réduction par utilisation de la règle 29 (accesFigure)


État 61

   50 operation: '(' operation ')' •

    $défaut  réduction par utilisation de la règle 50 (operation)


État 62

   51 operation: operation • '+' operation
   52          | operation • '-' operation
   52          | operation '-' operation •
   53          | operation • '*' operation
   54          | operation • '/' operation
   55          | '-' operation •

    NUMBER   réduction par utilisation de la règle 52 (operation)
    NUMBER   [réduction par utilisation de la règle 55 (operation)]
    '-'      réduction par utilisation de la règle 52 (operation)
    '-'      [réduction par utilisation de la règle 55 (operation)]
    '+'      réduction par utilisation de la règle 52 (operation)
    '+'      [réduction par utilisation de la règle 55 (operation)]
    '('      réduction par utilisation de la règle 52 (operation)
    '('      [réduction par utilisation de la règle 55 (operation)]
    $défaut  réduction par utilisation de la règle 55 (operation)


État 63

   51 operation: operation • '+' operation
   51          | operation '+' operation •
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 51 (operation)


État 64

   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   53          | operation '*' operation •
   54          | operation • '/' operation

    $défaut  réduction par utilisation de la règle 53 (operation)


État 65

   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation
   54          | operation '/' operation •

    $défaut  réduction par utilisation de la règle 54 (operation)


État 66

   28 carre: CARRE operation operation operation • attributs
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    INLINE_AFFECTATION  décalage et aller à l'état 80
    '-'                 décalage et aller à l'état 59
    '+'                 décalage et aller à l'état 43
    '*'                 décalage et aller à l'état 44
    '/'                 décalage et aller à l'état 45
    ';'                 décalage et aller à l'état 81
    '{'                 décalage et aller à l'état 82

    attributs  aller à l'état 83


État 67

   31 setAttribut: COULEUR '=' • HEXA_VALUE

    HEXA_VALUE  décalage et aller à l'état 84


État 68

   32 setAttribut: ROTATION '=' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 85


État 69

   34 setAttribut: REMPLISSAGE '=' • HEXA_VALUE

    HEXA_VALUE  décalage et aller à l'état 86


État 70

   33 setAttribut: OPACITE '=' • pourcentage

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    pourcentage  aller à l'état 87
    operation    aller à l'état 78


État 71

   35 setAttribut: EPAISSEUR '=' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 88


État 72

   45 accesCouleurFigure: accesFigure '.' COULEUR •

    $défaut  réduction par utilisation de la règle 45 (accesCouleurFigure)


État 73

   47 if: SI '(' condition ')' ALORS • '{' NL instructions '}'

    '{'  décalage et aller à l'état 89


État 74

   43 chaine: STRING •

    $défaut  réduction par utilisation de la règle 43 (chaine)


État 75

   42 chaine: HEXA_VALUE •

    $défaut  réduction par utilisation de la règle 42 (chaine)


État 76

   44 chaine: pourcentage •

    $défaut  réduction par utilisation de la règle 44 (chaine)


État 77

   46 stringCondition: accesCouleurFigure stringComparator chaine •

    $défaut  réduction par utilisation de la règle 46 (stringCondition)


État 78

   41 pourcentage: operation • '%'
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45
    '%'  décalage et aller à l'état 90


État 79

   51 operation: operation • '+' operation
   52          | operation • '-' operation
   52          | operation '-' operation •
   53          | operation • '*' operation
   54          | operation • '/' operation

    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 52 (operation)


État 80

   14 attributs: INLINE_AFFECTATION • attributsInline ';'

    COULEUR      décalage et aller à l'état 91
    ROTATION     décalage et aller à l'état 92
    REMPLISSAGE  décalage et aller à l'état 93
    OPACITE      décalage et aller à l'état 94
    EPAISSEUR    décalage et aller à l'état 95

    attributsInline      aller à l'état 96
    attributAffectation  aller à l'état 97


État 81

   12 attributs: ';' •

    $défaut  réduction par utilisation de la règle 12 (attributs)


État 82

   13 attributs: '{' • NL attributsCSS NL '}'

    NL  décalage et aller à l'état 98


État 83

   28 carre: CARRE operation operation operation attributs •

    $défaut  réduction par utilisation de la règle 28 (carre)


État 84

   31 setAttribut: COULEUR '=' HEXA_VALUE •

    $défaut  réduction par utilisation de la règle 31 (setAttribut)


État 85

   32 setAttribut: ROTATION '=' operation •
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 32 (setAttribut)


État 86

   34 setAttribut: REMPLISSAGE '=' HEXA_VALUE •

    $défaut  réduction par utilisation de la règle 34 (setAttribut)


État 87

   33 setAttribut: OPACITE '=' pourcentage •

    $défaut  réduction par utilisation de la règle 33 (setAttribut)


État 88

   35 setAttribut: EPAISSEUR '=' operation •
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 35 (setAttribut)


État 89

   47 if: SI '(' condition ')' ALORS '{' • NL instructions '}'

    NL  décalage et aller à l'état 99


État 90

   41 pourcentage: operation '%' •

    $défaut  réduction par utilisation de la règle 41 (pourcentage)


État 91

   15 attributAffectation: COULEUR • ':' HEXA_VALUE

    ':'  décalage et aller à l'état 100


État 92

   16 attributAffectation: ROTATION • ':' operation

    ':'  décalage et aller à l'état 101


État 93

   18 attributAffectation: REMPLISSAGE • ':' HEXA_VALUE

    ':'  décalage et aller à l'état 102


État 94

   17 attributAffectation: OPACITE • ':' pourcentage

    ':'  décalage et aller à l'état 103


État 95

   19 attributAffectation: EPAISSEUR • ':' operation

    ':'  décalage et aller à l'état 104


État 96

    9 attributsInline: attributsInline • '&' attributAffectation
   14 attributs: INLINE_AFFECTATION attributsInline • ';'

    '&'  décalage et aller à l'état 105
    ';'  décalage et aller à l'état 106


État 97

    8 attributsInline: attributAffectation •

    $défaut  réduction par utilisation de la règle 8 (attributsInline)


État 98

   13 attributs: '{' NL • attributsCSS NL '}'

    COULEUR      décalage et aller à l'état 91
    ROTATION     décalage et aller à l'état 92
    REMPLISSAGE  décalage et aller à l'état 93
    OPACITE      décalage et aller à l'état 94
    EPAISSEUR    décalage et aller à l'état 95

    attributsCSS         aller à l'état 107
    attributAffectation  aller à l'état 108


État 99

   47 if: SI '(' condition ')' ALORS '{' NL • instructions '}'

    VARIABLE  décalage et aller à l'état 2
    SI        décalage et aller à l'état 3
    TAILLE    décalage et aller à l'état 4
    CARRE     décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 6 (instructions)

    instructions         aller à l'état 109
    instruction          aller à l'état 110
    expression           aller à l'état 10
    declarationCanva     aller à l'état 11
    declarationFigure    aller à l'état 12
    carre                aller à l'état 13
    accesFigure          aller à l'état 14
    modificationFigure   aller à l'état 15
    declarationVariable  aller à l'état 16
    if                   aller à l'état 17


État 100

   15 attributAffectation: COULEUR ':' • HEXA_VALUE

    HEXA_VALUE  décalage et aller à l'état 111


État 101

   16 attributAffectation: ROTATION ':' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 112


État 102

   18 attributAffectation: REMPLISSAGE ':' • HEXA_VALUE

    HEXA_VALUE  décalage et aller à l'état 113


État 103

   17 attributAffectation: OPACITE ':' • pourcentage

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    pourcentage  aller à l'état 114
    operation    aller à l'état 78


État 104

   19 attributAffectation: EPAISSEUR ':' • operation

    NUMBER  décalage et aller à l'état 22
    '-'     décalage et aller à l'état 23
    '('     décalage et aller à l'état 25

    operation  aller à l'état 115


État 105

    9 attributsInline: attributsInline '&' • attributAffectation

    COULEUR      décalage et aller à l'état 91
    ROTATION     décalage et aller à l'état 92
    REMPLISSAGE  décalage et aller à l'état 93
    OPACITE      décalage et aller à l'état 94
    EPAISSEUR    décalage et aller à l'état 95

    attributAffectation  aller à l'état 116


État 106

   14 attributs: INLINE_AFFECTATION attributsInline ';' •

    $défaut  réduction par utilisation de la règle 14 (attributs)


État 107

   11 attributsCSS: attributsCSS • NL attributAffectation
   13 attributs: '{' NL attributsCSS • NL '}'

    NL  décalage et aller à l'état 117


État 108

   10 attributsCSS: attributAffectation •

    $défaut  réduction par utilisation de la règle 10 (attributsCSS)


État 109

   47 if: SI '(' condition ')' ALORS '{' NL instructions • '}'

    '}'  décalage et aller à l'état 118


État 110

    5 instructions: instruction • NL instructions

    NL  décalage et aller à l'état 119


État 111

   15 attributAffectation: COULEUR ':' HEXA_VALUE •

    $défaut  réduction par utilisation de la règle 15 (attributAffectation)


État 112

   16 attributAffectation: ROTATION ':' operation •
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 16 (attributAffectation)


État 113

   18 attributAffectation: REMPLISSAGE ':' HEXA_VALUE •

    $défaut  réduction par utilisation de la règle 18 (attributAffectation)


État 114

   17 attributAffectation: OPACITE ':' pourcentage •

    $défaut  réduction par utilisation de la règle 17 (attributAffectation)


État 115

   19 attributAffectation: EPAISSEUR ':' operation •
   51 operation: operation • '+' operation
   52          | operation • '-' operation
   53          | operation • '*' operation
   54          | operation • '/' operation

    '-'  décalage et aller à l'état 59
    '+'  décalage et aller à l'état 43
    '*'  décalage et aller à l'état 44
    '/'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 19 (attributAffectation)


État 116

    9 attributsInline: attributsInline '&' attributAffectation •

    $défaut  réduction par utilisation de la règle 9 (attributsInline)


État 117

   11 attributsCSS: attributsCSS NL • attributAffectation
   13 attributs: '{' NL attributsCSS NL • '}'

    COULEUR      décalage et aller à l'état 91
    ROTATION     décalage et aller à l'état 92
    REMPLISSAGE  décalage et aller à l'état 93
    OPACITE      décalage et aller à l'état 94
    EPAISSEUR    décalage et aller à l'état 95
    '}'          décalage et aller à l'état 120

    attributAffectation  aller à l'état 121


État 118

   47 if: SI '(' condition ')' ALORS '{' NL instructions '}' •

    $défaut  réduction par utilisation de la règle 47 (if)


État 119

    5 instructions: instruction NL • instructions

    VARIABLE  décalage et aller à l'état 2
    SI        décalage et aller à l'état 3
    TAILLE    décalage et aller à l'état 4
    CARRE     décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 6 (instructions)

    instructions         aller à l'état 122
    instruction          aller à l'état 110
    expression           aller à l'état 10
    declarationCanva     aller à l'état 11
    declarationFigure    aller à l'état 12
    carre                aller à l'état 13
    accesFigure          aller à l'état 14
    modificationFigure   aller à l'état 15
    declarationVariable  aller à l'état 16
    if                   aller à l'état 17


État 120

   13 attributs: '{' NL attributsCSS NL '}' •

    $défaut  réduction par utilisation de la règle 13 (attributs)


État 121

   11 attributsCSS: attributsCSS NL attributAffectation •

    $défaut  réduction par utilisation de la règle 11 (attributsCSS)


État 122

    5 instructions: instruction NL instructions •

    $défaut  réduction par utilisation de la règle 5 (instructions)
